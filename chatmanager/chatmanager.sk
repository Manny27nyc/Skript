# THIS IS THE FULL VERSION OF chat.sk
# Please do not redistribute this with your own name.
# This resource may be free, but still.
# If you need any help, contact me on Discord: succ#0279
# SpigotMC: 

options:
    perm: &cError: &bYou do not have the required permission to execute this command. # permission message
    default: &f[Member] %player% > &7%message% #default chat format
    owner: &c[Owner] &f%player% > &f%message% #owner chat format
    #
    # You can create your own chat formats here. The "customrank" format is so you can create your own chat formats.
    # Find the color codes here: https://plancke.io/tools/color/
    # It is possible to replicate this process as many times as you want. You can create the permission yourself; check below.
    #
    #customrank: §b[CustomRank] §f%player% > §f%message%
    
#
# This is the thing where the chat is being formatted
# You can create unlimited more, but be sure to add the format above.
# If you need help, contact me on Discord: succ#0279
#

on chat:
    if {chatmuted} is "true":
        cancel event
        send "&cThe chat is muted, no one can talk!"
    else if {%player%.muted} is "true":
        cancel event
        send "&cYou are muted! Contact the administators for an unmute."
    else if message contains "fuck, nigger, nigga":
        cancel event
        send "&cIt looks like you tried to use blacklisted words in your message. Please refrain from doing so."
    else if {%player%.ac} is "true":
        cancel event
        loop all players:
            if loop-player has permission "chatmanager.adminchat":
                send "&c&l[AdminChat] &b&l%player% > %message%" to loop-player
    else:
        cancel event
        if player has permission "chatmanager.owner": # checks permission (you can change the permission)
            broadcast "{@owner}" # sends the message (configurable above) to everyone
        #else if player has permission "chatmanager.customrank":
            #broadcast "{@customrank}"
        else: # this is the default chat format.
            broadcast "{@default}"
        
# Commands. Not recommended to change anything.

command /chatmanager <text=info>:
    permission: chatmanager.main
    permission message: @perm
    description: Main Chatmanager command
    aliases: /cm, /cmanager, /chatm
    usage: Do /chatmanager help for a list of commands. \n This is a line test.
    trigger:
        if argument is "info":
            send ""
            send "&bChatmanager"
            send ""
            send "&3Version: 1.0"
            send "&3For a list of commands, do /chatmanager help"
            send "&aCheck &f<link:https://github.com/mauritsf15/Skript/tree/master/chatmanager>my github<reset> &r&afor new versions!"
        else if argument is "help":
            if 1 is 1:
                send ""
                send "&dChatManager Help"
                send ""
                send "&d/chatmanager info &f- returns skript information"
                send "&d/chatmanager help &f- returns this message"
                send "&d/chatmanager reload &f- reload configuration"
                send "&d/clearchat &f- clears the chat"
                send "&d/mute <player> <reason> &f- mute a player"
                send "&d/unmute <player> &f- unmute a player"
                send "&d/adminchat [text] &f- admin chat"
                send "&d/mutechat &f- mutes and unmutes the chat"
        else if argument is "setgroup":
            if player has permission "chatmanager.setgroup":
                send "&8You can set the group of a player in your permission manager. Learn more here: <link:https://github.com/mauritsf15/Skript/tree/master/chatmanager>my github<reset>"
            else:
                send "{@perm}"
        else if argument is "disable":
            if player has permission "chatmanager.disable":
                make player execute command "/sk disable chat.sk"
            else:
                send "{@perm}"
        else if argument is "reload":
            if player has permission "chatmanager.reload":
                make player execute command "/sk reload scripts"
            else:
                send "{@perm}"
        else if argument is not "info" or "help" or "setgroup" or "disable" or "reload":
            make player execute command "/chatmanager help"

# Simple welcome messages

on first join:
    broadcast "&d%player% has joined the server for the first time! [%{totalplayers}%]" # First join message
    send title "&dWelcome to the server, &a%player%!" with subtitle "Get started with &a/start!" # Shows a title on the first join

on join:
    broadcast "&a%player% has joined the server"

#
# ---------=========AUTOBROADCAST=========---------
#

every 3 minutes:
    if {bc} is 1:
        broadcast "&b[ChatManager]&r &aThis is a hint!"
        set {bc} to 2
    if {bc} is 2:
        broadcast "&b[ChatManager]&r &aThis is a important message."
        set {bc} to 3
    if {bc} is 3:
        broadcast "&b[ChatManager]&r &aThis is another hint!"
        set {bc} to 0
    else:
        broadcast "&b&l[ChatManager]&r &aBuy from our shop! Link: <link:linkhere>Text here<reset>"
        set {bc} to 1

#
# ---------=========CHAT FILTER=========---------
#
# Go to the "on chat" and fill in all the words you'd like to filter.
# Example: "fuck, nigger, nigga, bitch, whore"
# Please only edit the part within the "".

#
# ---------=========CLEAR CHAT=========---------
#

command /clearchat:
    permission: chatmanager.clearchat
    permission message: @perm
    usage: /clearchat
    aliases: /cc
    description: Clear the chat
    trigger:
        loop 299 times:
            send "" to all players
        broadcast "&b&l[ChatManager] &r&aChat Cleared!"

#
# ---------=========MUTE AND UNMUTE PLAYER=========---------
#

command /mute <player> <text>:
    permission: chatmanager.mute
    permission message: @perm
    usage: /cmute <player> <reason>
    description: Mute a player
    trigger:
        set {%argument 1%.muted} to "true"
        send "&dSuccesfully muted %argument 1% for %argument 2%"
        send "&cYou were muted by &f%player% &cfor the following reason: &f%argument 2%"
        broadcast "&b&l[ChatManager] &r&a%argument 1% &cwas muted for &a%argument 2%"

command /unmute <player>:
    permission: chatmanager.unmute
    permission message: @perm
    usage: /unmute <player>
    aliases: /um
    description: Unmute a player
    trigger:
        set {%argument 1%.muted} to "false"
        send "&dSuccesfully unmuted %argument 1%"
        send "&cYou were unmuted by &f%player%."

#
# ---------=========ADMIN CHAT=========---------
#

command /ac [<text>]:
    permission: chatmanager.adminchat
    permission message: @perm
    usage: /ac [text]
    aliases: /adminchat, /sc, /staffchat
    description: Admin Chat
    trigger:
        if argument 1 is not set:
            if {%player%.ac} is "true":
                set {%player%.ac} to "false"
                send "&dToggled Admin Chat &cOFF"
            else:
                set {%player%.ac} to "true"
                send "&dToggled Admin Chat &cON"
        else:
            loop all players:
                if loop-player has permission "chatmanager.adminchat":
                    send "&c&l[AdminChat] &b&l%player% > %argument 1%" to loop-player
                else:
                    stop

#
# ---------=========MUTE CHAT=========---------
#

command /mc:
    permission: chatmanager.mutechat
    permission message: @perm
    usage: /mc
    aliases: /mutechat
    description: Mute the chat
    trigger:
        if {chatmuted} is "true":
            set {chatmuted} to "false"
            broadcast "&aChat is unmuted!"
        else:
            set {chatmuted} to "true"
            broadcast "&aChat is muted!"
